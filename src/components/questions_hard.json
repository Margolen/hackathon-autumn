[
  {
    "id": "1",
    "question": "Как работает CSS Grid?",
    "answer": "Принцип работы Grid чем-то похож на табличную верстку. Это набор пересекающихся горизонтальных и вертикальных линий, которые создают размерность и позиционируют систему координат для контента в самом grid контейнере.",
    "fakeanswers": [
      "Этот способ верстки берёт элемент, убирает его из обычного потока страницы и позиционирует слева или справа от родительского элемента. Все остальные элементы на странице будут обтекать такой элемент.",
      "Основной целью CSS Grid является предоставление возможности изменения своих элементов по ширине и высоте, для того, чтобы они максимально эффективно умещались в доступном месте родительского контейнера."
    ],
    "tag": "css"
  },
  {
    "id": "2",
    "question": "Разница между классом и идентификатором в CSS?",
    "answer": "Главное отличие от классов в том, что селектор id может использоваться на странице только один раз. Селектор class, наоборот может применяться на одной странице бесконечное количество раз.",
    "fakeanswers": [
      "Классы  и идентификаторы выполняют одни и те же задачи. Они задают разные стили для тега <div>, как во внешнем CSS файле, так и внутри документа, через тег style.",
      "Класс может использоваться на странице только один раз. Селектор id, наоборот может применяться на одной странице бесконечное количество раз."
    ],
    "tag": "css"
  },
  {
    "id": "3",
    "question": "Что такое замыкание?",
    "answer": "Это способность функции запоминать переменные, которые были определены внутри родительской функции, даже после того, как родительская функция была выполнена.",
    "fakeanswers": [
      "Это функция, которая при одинаковых значениях аргументов всегда возвращает одинаковые значения и не имеет наблюдаемых побочных эффектов.",
      "это фрагмент кода, который позволяет использовать современную функциональность в более старых браузерах, которые не поддерживают ее по умолчанию."
    ],
    "tag": "js"
  },

  {
    "id": "4",
    "question": "В чем разница между функциональными и классовыми компонентами",
    "answer": "Функциональные компоненты — это просто функции, которые возвращают элементы JSX. Они имеют более короткий и простой синтаксис, что делает их легче для чтения и написания. Классовые компоненты имеют более сложный синтаксис, который включает в себя объявление класса и метод render.",
    "fakeanswers": [
      "Классовые компоненты — это просто функции, которые возвращают элементы JSX. Они имеют более короткий и простой синтаксис, что делает их легче для чтения и написания. Функциональные компоненты имеют более сложный синтаксис, который включает в себя объявление класса и метод render.",
      "Классовые компоненты считаются устаревшими, и вместо них повсеместно используют функиональные."
    ],
    "tag": "react"
  },
  {
    "id": "5",
    "question": "Что такое JSX?",
    "answer": "Это расширение синтаксиса JavaScript. Этот синтаксис выглядит как язык шаблонов, но наделён всеми языковыми возможностями JavaScript.",
    "fakeanswers": [
      "Это метаязык (язык для описания другого языка), который упрощает и ускоряет написание CSS-кода.",
      "Это языковая разметка для создания двухмерных графических интерфейсов и изображений."
    ],
    "tag": "react"
  }
]
